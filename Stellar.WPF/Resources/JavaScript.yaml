# syntax definition for JavaScript 2.0 by Svante Lidman
# converted to AvalonEdit format by Siegfried Pammer in 2010
# converted to Stellar.Editor (yaml) by Hector J. Rivas in 2023
name: JavaScript
extensions: [js]
styles:
  - &digits
    foreground: DarkBlue
  - &comments
    foreground: Green
  - &strings
    foreground: Sienna
  - &characters
    foreground: Sienna
  - &regexes
    foreground: Sienna
  - &keywords
    foreground: Blue
  - &intrinsics
    foreground: Blue
  - &literals
    foreground: Blue
  - &globals
    foreground: Blue

ruleSets:
  - keywords: "abstract boolean break byte case catch char class const continue
      debugger default delete do double else enum export extends
      final finally float for function goto if implements import in instanceof int interface
      let long native new package private protected public return short static super switch synchronized
      this throw throws transient try typeof var void volatile while with"
    style: *keywords
    ignoreCase: true

  - keywords: "Array Boolean Date Function Global Math Number Object RegExp String"
    style: *intrinsics

  - keywords: "false null true NaN Infinity"
    style: *literals

  - keywords: "eval parseInt parseFloat escape unescape isNaN isFinite"
    style: *globals

  - span: //
    style: *comments

  - span: /\*
    end: \*/
    style: *comments
    multiline: true

  - span: (?<!([})\]\w]+\s*))/
    end: /
    style: *regexes

  - span: \"
    end: \"
    style: *strings
    multiline: true
    ruleSet:
      - span: \\
        end: .

  - span: \'
    end: \'
    style: *characters
    ruleSet:
      - span: \\
        end: .
  
  #TODO: this is universal, keep it in code
  - digits: \b0[xX][0-9a-fA-F]+|(\b\d+(\.[0-9]+)?|\.[0-9]+)([eE][+-]?[0-9]+)?
    style: *digits

